@base <http://rdfa.digitalbazaar.com/test-suite/> .
@prefix : <http://www.w3.org/2006/03/test-description#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix log: <http://www.w3.org/2000/10/swap/log#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix test: <http://www.w3.org/2006/03/test-description#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<test-cases/0001> dc:contributor "Elias Torres";
   dc:title "Predicate establishment with @property";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0001.html>;
   :informationResourceResults <test-cases/0001.sparql>;
   :purpose "Tests @property to establish the predicate; literal object is in the content of the element.";
   :specificationReference "" .
<test-cases/0006> dc:contributor "Elias Torres";
   dc:title "@rel and @rev";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0006.html>;
   :informationResourceResults <test-cases/0006.sparql>;
   :purpose "Tests @rev and @rel together, with the object being specified by @href, ignoring content";
   :specificationReference "" .
<test-cases/0007> dc:contributor "Elias Torres";
   dc:title "@rel, @rev, @property, @content";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0007.html>;
   :informationResourceResults <test-cases/0007.sparql>;
   :purpose "Tests @rel, @rev, @property, and @content together to generate several RDF triples.";
   :specificationReference "" .
<test-cases/0008> dc:contributor "Elias Torres";
   dc:title "empty string @about";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0008.html>;
   :informationResourceResults <test-cases/0008.sparql>;
   :purpose "Tests empty @about.";
   :specificationReference "" .
<test-cases/0009> dc:contributor "Elias Torres";
   dc:title "@rev";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0009.html>;
   :informationResourceResults <test-cases/0009.sparql>;
   :purpose "Tests @rev.";
   :specificationReference "" .
<test-cases/0010> dc:contributor "Elias Torres";
   dc:title "@rel, @rev, @href";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0010.html>;
   :informationResourceResults <test-cases/0010.sparql>;
   :purpose "Tests @rel, @rev, and @href to generate two RDF triples.";
   :specificationReference "" .
<test-cases/0011> dc:contributor "Elias Torres";
   dc:title "XMLLiteral";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0011.html>;
   :informationResourceResults <test-cases/0011.sparql>;
   :purpose "Tests XMLLiteral content";
   :specificationReference "" .
<test-cases/0012> dc:contributor "Elias Torres";
   dc:title "@xml:lang";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0012.html>;
   :informationResourceResults <test-cases/0012.sparql>;
   :purpose "Tests @xml:lang";
   :specificationReference "" .
<test-cases/0013> dc:contributor "Elias Torres";
   dc:title "@xml:lang inheritance";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0013.html>;
   :informationResourceResults <test-cases/0013.sparql>;
   :purpose "Tests @xml:lang inheritance";
   :specificationReference "" .
<test-cases/0014> dc:contributor "Elias Torres";
   dc:title "@datatype, xsd:integer";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0014.html>;
   :informationResourceResults <test-cases/0014.sparql>;
   :purpose "Tests setting the @datatype to xsd:integer";
   :specificationReference "" .
<test-cases/0015> dc:contributor "Elias Torres";
   dc:title "meta and link";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0015.html>;
   :informationResourceResults <test-cases/0015.sparql>;
   :purpose "Tests meta and link with no parent @about";
   :specificationReference "" .
<test-cases/0017> dc:contributor "Elias Torres";
   dc:title "Related blanknodes";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0017.html>;
   :informationResourceResults <test-cases/0017.sparql>;
   :purpose "Tests creation of statements involving explicitly created blank nodes.";
   :specificationReference "" .
<test-cases/0018> dc:contributor "Wing Yung";
   dc:title "@rel for predicate";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0018.html>;
   :informationResourceResults <test-cases/0018.sparql>;
   :purpose "Tests @rel to establish predicate.";
   :specificationReference "" .
<test-cases/0019> dc:contributor "Wing Yung";
   dc:title "@about for subject";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0019.html>;
   :informationResourceResults <test-cases/0019.sparql>;
   :purpose "Tests @about to establish subject.";
   :specificationReference "" .
<test-cases/0020> dc:contributor "Wing Yung";
   dc:title "Inheriting @about for subject";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0020.html>;
   :informationResourceResults <test-cases/0020.sparql>;
   :purpose "Tests @about inheritance to establish subject.";
   :specificationReference "" .
<test-cases/0021> dc:contributor "Wing Yung";
   dc:title "Subject inheritance with no @about";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0021.html>;
   :informationResourceResults <test-cases/0021.sparql>;
   :purpose "Tests inheritance of subject when no @about can be found";
   :specificationReference "" .
<test-cases/0023> dc:contributor "Wing Yung";
   dc:title "@id does not generate subjects";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0023.html>;
   :informationResourceResults <test-cases/0023.sparql>;
   :purpose "Tests that @id does not generate subjects";
   :specificationReference "" .
<test-cases/0025> dc:contributor "Ben Adida";
   dc:title "simple chaining test";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0025.html>;
   :informationResourceResults <test-cases/0025.sparql>;
   :purpose "Tests simple chaining with cascade of @resource and @property";
   :specificationReference "" .
<test-cases/0026> dc:contributor "Wing Yung";
   dc:title "@content";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0026.html>;
   :informationResourceResults <test-cases/0026.sparql>;
   :purpose "Tests @content for literal object";
   :specificationReference "" .
<test-cases/0027> dc:contributor "Wing Yung";
   dc:title "@content, ignore element content";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0027.html>;
   :informationResourceResults <test-cases/0027.sparql>;
   :purpose "Tests @content for literal object, overriding element content.";
   :specificationReference "" .
<test-cases/0029> dc:contributor "Michael Hausenblas";
   dc:title "markup stripping with @datatype";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0029.html>;
   :informationResourceResults <test-cases/0029.sparql>;
   :purpose "Tests markup stripping from a span element with @datatype=xsd:string";
   :specificationReference "" .
<test-cases/0030> dc:contributor "Michael Hausenblas";
   dc:title "omitted @about";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0030.html>;
   :informationResourceResults <test-cases/0030.sparql>;
   :purpose "Tests omitted @about.";
   :specificationReference "" .
<test-cases/0031> dc:contributor "Ralph Swick";
   dc:title "simple @resource";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0031.html>;
   :informationResourceResults <test-cases/0031.sparql>;
   :purpose "Tests if @resource sets URIref object correct.";
   :specificationReference "" .
<test-cases/0032> dc:contributor "Ralph Swick";
   dc:title "@resource overrides @href";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0032.html>;
   :informationResourceResults <test-cases/0032.sparql>;
   :purpose "Tests if @resource overrides @href to set the URIref object.";
   :specificationReference "" .
<test-cases/0033> dc:contributor "Michael Hausenblas";
   dc:title "simple chaining test with bNode";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0033.html>;
   :informationResourceResults <test-cases/0033.sparql>;
   :purpose "Tests simple chaining with cascade of bNode and @property";
   :specificationReference "" .
<test-cases/0034> dc:contributor "Michael Hausenblas";
   dc:title "simple img[@src] test";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0034.html>;
   :informationResourceResults <test-cases/0034.sparql>;
   :purpose "Tests if a @src (in img element) correctly sets the URIref object";
   :specificationReference "" .
<test-cases/0035> dc:contributor "Michael Hausenblas";
   dc:title "@src/@href test";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0035.html>;
   :informationResourceResults <test-cases/0035.sparql>;
   :purpose "Tests if @href overwrites @src";
   :specificationReference "" .
<test-cases/0036> dc:contributor "Michael Hausenblas";
   dc:title "@src/@resource test";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0036.html>;
   :informationResourceResults <test-cases/0036.sparql>;
   :purpose "Tests if @resource overwrites @src";
   :specificationReference "" .
<test-cases/0037> dc:contributor "Steven Pemberton";
   dc:title "@src/@href/@resource test";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0037.html>;
   :informationResourceResults <test-cases/0037.sparql>;
   :purpose "Tests if @resource overwrites both @href and @src";
   :specificationReference "" .
<test-cases/0038> dc:contributor "Mark Birbeck";
   dc:title "@rev - img[@src] test";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0038.html>;
   :informationResourceResults <test-cases/0038.sparql>;
   :purpose "Tests if a @src (in img element) correctly sets the URIref subject (due to @rev)";
   :specificationReference "" .
<test-cases/0039> dc:contributor "Mark Birbeck";
   dc:title "@rev - @src/@href test";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0039.html>;
   :informationResourceResults <test-cases/0039.sparql>;
   :purpose "Tests if @href overwrites @src correctly to set the URIref subject (due to @rev)";
   :specificationReference "" .
<test-cases/0040> dc:contributor "Mark Birbeck";
   dc:title "@rev - @src/@resource test";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0040.html>;
   :informationResourceResults <test-cases/0040.sparql>;
   :purpose "Tests if @resource overwrites @src correctly to set the URIref subject (due to @rev)";
   :specificationReference "" .
<test-cases/0041> dc:contributor "Mark Birbeck";
   dc:title "@rev - @src/@href/@resource test";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0041.html>;
   :informationResourceResults <test-cases/0041.sparql>;
   :purpose "Tests if @resource overwrites both @href and @src correctly to set the URIref subject (due to @rev)";
   :specificationReference "" .
<test-cases/0042> dc:contributor "Ben Adida";
   dc:title "img[@src] test with omitted @about";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0042.html>;
   :informationResourceResults <test-cases/0042.sparql>;
   :purpose "Tests if a @src (in img element) correctly sets the URIref object (with omitted @about)";
   :specificationReference "" .
<test-cases/0046> dc:contributor "Ivan Herman";
   dc:title "@typeof with @rel present, no @href, @resource, or @about";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0046.html>;
   :informationResourceResults <test-cases/0046.sparql>;
   :purpose "Tests @typeof with @rel present, no @href, @resource, or @about";
   :specificationReference "" .
<test-cases/0047> dc:contributor "Ivan Herman";
   dc:title "@typeof with @rel and @resource present, no @about";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0047.html>;
   :informationResourceResults <test-cases/0047.sparql>;
   :purpose "Tests @typeof with @rel and @resource present, no @about";
   :specificationReference "" .
<test-cases/0048> dc:contributor "Ivan Herman";
   dc:title "@typeof with @about and @rel present, no @resource";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0048.html>;
   :informationResourceResults <test-cases/0048.sparql>;
   :purpose "Tests @typeof with @about and @rel present, no @resource";
   :specificationReference "" .
<test-cases/0049> dc:contributor "Ivan Herman";
   dc:title "@typeof with @about, no @rel or @resource";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0049.html>;
   :informationResourceResults <test-cases/0049.sparql>;
   :purpose "Tests @typeof with @about, no @rel or @resource";
   :specificationReference "" .
<test-cases/0050> dc:contributor "Ivan Herman";
   dc:title "@typeof without anything else";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0050.html>;
   :informationResourceResults <test-cases/0050.sparql>;
   :purpose "Tests @typeof without anything else";
   :specificationReference "" .
<test-cases/0051> dc:contributor "Ivan Herman";
   dc:title "@typeof with a single @property";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0051.html>;
   :informationResourceResults <test-cases/0051.sparql>;
   :purpose "Tests @typeof with a single @property";
   :specificationReference "" .
<test-cases/0052> dc:contributor "Ivan Herman";
   dc:title "@typeof with @resource and nothing else";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0052.html>;
   :informationResourceResults <test-cases/0052.sparql>;
   :purpose "Tests to ensure that @typeof does not apply to @resource";
   :specificationReference "" .
<test-cases/0053> dc:contributor "Ivan Herman";
   dc:title "@typeof with @resource and nothing else, with a subelement";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0053.html>;
   :informationResourceResults <test-cases/0053.sparql>;
   :purpose "Tests to make sure that @typeof does not apply to @resource, but @resource sets the subject for the next triple to be generated";
   :specificationReference "" .
<test-cases/0054> dc:contributor "Fabien Gandon";
   dc:title "multiple @property";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0054.html>;
   :informationResourceResults <test-cases/0054.sparql>;
   :purpose "Tests multiple @property separated by white spaces";
   :specificationReference "" .
<test-cases/0055> dc:contributor "Fabien Gandon";
   dc:title "multiple @rel";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0055.html>;
   :informationResourceResults <test-cases/0055.sparql>;
   :purpose "Tests multiple @rel separated by white spaces";
   :specificationReference "" .
<test-cases/0056> dc:contributor "Manu Sporny";
   dc:title "@typeof applies to @about on same element with hanging rel";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0056.html>;
   :informationResourceResults <test-cases/0056.sparql>;
   :purpose "Tests if @typeof applies to @about on same element with hanging @rel";
   :specificationReference "" .
<test-cases/0057> dc:contributor "Manu Sporny";
   dc:title "hanging @rel creates multiple triples";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0057.html>;
   :informationResourceResults <test-cases/0057.sparql>;
   :purpose "Tests if hanging @rel creates multiple triples";
   :specificationReference "" .
<test-cases/0058> dc:contributor "Manu Sporny";
   dc:title "hanging @rel creates multiple triples, @typeof permutation";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0058.html>;
   :informationResourceResults <test-cases/0058.sparql>;
   :purpose "Tests if hanging @rel creates multiple triples with @typeof permutation";
   :specificationReference "" .
<test-cases/0059> dc:contributor "Manu Sporny";
   dc:title "multiple hanging @rels with multiple children";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0059.html>;
   :informationResourceResults <test-cases/0059.sparql>;
   :purpose "Tests multiple hanging @rels with multiple children";
   :specificationReference "" .
<test-cases/0060> dc:contributor "Manu Sporny";
   dc:title "UTF-8 conformance";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0060.html>;
   :informationResourceResults <test-cases/0060.sparql>;
   :purpose "Tests conformance with UTF-8 encoding";
   :specificationReference "" .
<test-cases/0061> dc:contributor "Manu Sporny";
   dc:title "@rel in head using reserved, non-prefixed XHTML value";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0061.html>;
   :informationResourceResults <test-cases/0061.sparql>;
   :purpose "Tests @rel in head using reserved, non-prefixed XHTML value";
   :specificationReference "" .
<test-cases/0062> dc:contributor "Manu Sporny";
   dc:title "@rev in head using reserved, non-prefixed XHTML value";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0062.html>;
   :informationResourceResults <test-cases/0062.sparql>;
   :purpose "Tests @rev in head using reserved, non-prefixed XHTML value";
   :specificationReference "" .
<test-cases/0063> dc:contributor "Manu Sporny";
   dc:title "@rel in head using reserved XHTML value and empty-prefix CURIE syntax";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0063.html>;
   :informationResourceResults <test-cases/0063.sparql>;
   :purpose "Tests @rel in head using reserved XHTML value and empty-prefix CURIE syntax";
   :specificationReference "" .
<test-cases/0064> dc:contributor "Manu Sporny";
   dc:title "@about with safe CURIE";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0064.html>;
   :informationResourceResults <test-cases/0064.sparql>;
   :purpose "Tests if @about generates a proper triple when a safe CURIE is used";
   :specificationReference "" .
<test-cases/0065> dc:contributor "Manu Sporny";
   dc:title "@rel with safe CURIE";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0065.html>;
   :informationResourceResults <test-cases/0065.sparql>;
   :purpose "Tests if @rel properly connects triples generated when safe CURIEs are used";
   :specificationReference "" .
<test-cases/0066> dc:contributor "Manu Sporny";
   dc:title "@about with @typeof in the head";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0066.html>;
   :informationResourceResults <test-cases/0066.sparql>;
   :purpose "Test to make sure that @about (with current document) is implied in the head, and the proper triples are generated using @typeof";
   :specificationReference "" .
<test-cases/0067> dc:contributor "Manu Sporny";
   dc:title "@property in the head";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0067.html>;
   :informationResourceResults <test-cases/0067.sparql>;
   :purpose "Test to make sure that @property in head uses the implied current document as the subject if no other subject is specified";
   :specificationReference "" .
<test-cases/0068> dc:contributor "Manu Sporny";
   dc:title "Relative URI in @about";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0068.html>;
   :informationResourceResults <test-cases/0068.sparql>;
   :purpose "Tests to ensure that relative URI is resolved correctly when used in @about";
   :specificationReference "" .
<test-cases/0069> dc:contributor "Manu Sporny";
   dc:title "Relative URI in @href";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0069.html>;
   :informationResourceResults <test-cases/0069.sparql>;
   :purpose "Tests to ensure that relative URI is resolved correctly when used in @href";
   :specificationReference "" .
<test-cases/0070> dc:contributor "Manu Sporny";
   dc:title "Relative URI in @resource";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0070.html>;
   :informationResourceResults <test-cases/0070.sparql>;
   :purpose "Tests to ensure that relative URI is resolved correctly when used in @resource";
   :specificationReference "" .
<test-cases/0071> dc:contributor "Manu Sporny";
   dc:title "No explicit @about";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0071.html>;
   :informationResourceResults <test-cases/0071.sparql>;
   :purpose "Tests to ensure that a triple is generated even if @typeof and @about is not specified anywhere in the document";
   :specificationReference "" .
<test-cases/0072> dc:contributor "Manu Sporny";
   dc:title "Relative URI in @about (with XHTML base in head)";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0072.html>;
   :informationResourceResults <test-cases/0072.sparql>;
   :purpose "Tests to ensure that relative URIs are resolved correctly when used in @about with XHTML base set in head";
   :specificationReference "" .
<test-cases/0073> dc:contributor "Manu Sporny";
   dc:title "Relative URI in @resource (with XHTML base in head)";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0073.html>;
   :informationResourceResults <test-cases/0073.sparql>;
   :purpose "Tests to ensure that relative URIs are resolved correctly when used in @resource with XHTML base set in head";
   :specificationReference "" .
<test-cases/0074> dc:contributor "Manu Sporny";
   dc:title "Relative URI in @href (with XHTML base in head)";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0074.html>;
   :informationResourceResults <test-cases/0074.sparql>;
   :purpose "Tests to ensure that relative URIs are resolved correctly when used in @href with XHTML base set in head";
   :specificationReference "" .
<test-cases/0075> dc:contributor "Manu Sporny";
   dc:title "Reserved word 'license' in @rel with no explizit @about";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0075.html>;
   :informationResourceResults <test-cases/0075.sparql>;
   :purpose "Tests to ensure that the XHTML+RDFa reserved word 'license' when used in @rel (with no @about) generates the proper triple";
   :specificationReference "" .
<test-cases/0076> dc:contributor "Manu Sporny";
   dc:title "All reserved XHTML @rel values";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0076.html>;
   :informationResourceResults <test-cases/0076.sparql>;
   :purpose "Tests to ensure that all reserved XHTML words are supported in @rel";
   :specificationReference "" .
<test-cases/0077> dc:contributor "Manu Sporny";
   dc:title "All reserved XHTML @rev values";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0077.html>;
   :informationResourceResults <test-cases/0077.sparql>;
   :purpose "Tests to ensure that all reserved XHTML words are supported in @rev";
   :specificationReference "" .
<test-cases/0078> dc:contributor "Ivan Herman";
   dc:title "Multiple incomplete triples";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0078.html>;
   :informationResourceResults <test-cases/0078.sparql>;
   :purpose "Tests multiple ways of handling incomplete triples; the first two triples should use the same bnode as subject ('merged'). The third should have a separate bNode.";
   :specificationReference "" .
<test-cases/0079> dc:contributor "Ivan Herman";
   dc:title "@resource and @href in completing incomplete triples";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0079.html>;
   :informationResourceResults <test-cases/0079.sparql>;
   :purpose "Tests role of @resource and @href in completing incomplete triples (including their mutual priorities)";
   :specificationReference "" .
<test-cases/0080> dc:contributor "Ivan Herman";
   dc:title "@about overrides @resource in incomplete triples";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0080.html>;
   :informationResourceResults <test-cases/0080.sparql>;
   :purpose "Tests if @about has a higher priority than @resource in handling incomplete triples";
   :specificationReference "" .
<test-cases/0081> dc:contributor "Ivan Herman";
   dc:title "multiple ways of handling incomplete triples (with @rev)";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0081.html>;
   :informationResourceResults <test-cases/0081.sparql>;
   :purpose "Tests multiple ways of handling incomplete triples, this time with @rev";
   :specificationReference "" .
<test-cases/0082> dc:contributor "Ivan Herman";
   dc:title "multiple ways of handling incomplete triples (with @rel and @rev)";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0082.html>;
   :informationResourceResults <test-cases/0082.sparql>;
   :purpose "Tests multiple ways of handling incomplete triples, this time with both @rel and @rev";
   :specificationReference "" .
<test-cases/0083> dc:contributor "Ivan Herman";
   dc:title "multiple ways of handling incomplete triples (merged)";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0083.html>;
   :informationResourceResults <test-cases/0083.sparql>;
   :purpose "Tests multiple ways of handling incomplete triples; the first two triples should use the same bNode as subject ('merged'); the third case should use @about";
   :specificationReference "" .
<test-cases/0084> dc:contributor "Ivan Herman";
   dc:title "multiple ways of handling incomplete triples, this time with both @rel and @rev";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0084.html>;
   :informationResourceResults <test-cases/0084.sparql>;
   :purpose "Tests multiple ways of handling incomplete triples, this time with both @rel and @rev. There is an intermediate div that should be ignored by the process";
   :specificationReference "" .
<test-cases/0085> dc:contributor "Ivan Herman";
   dc:title "@resource and @href in completing incomplete triples";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0085.html>;
   :informationResourceResults <test-cases/0085.sparql>;
   :purpose "Tests the role of @resource and @href in completing incomplete triples (including their mutual priorities), but with an intermediate layer (ie, bNode) added";
   :specificationReference "" .
<test-cases/0086> dc:contributor "Ivan Herman";
   dc:title "NO triple for a non-reserved @rel value";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0086.html>;
   :informationResourceResults <test-cases/0086.sparql>;
   :purpose "Test that NO triple should be generated for a non-reserved @rel value";
   :specificationReference "7.4.3 General Use of Terms in Attributes" .
<test-cases/0087> dc:contributor "Ivan Herman";
   dc:title "All reserved XHTML @rel values (with :xxx)";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0087.html>;
   :informationResourceResults <test-cases/0087.sparql>;
   :purpose "Tests to ensure that all reserved XHTML words are supported in @rel (with :xxx)";
   :specificationReference "" .
<test-cases/0088> dc:contributor "Ivan Herman";
   dc:title "Interpretation of the CURIE \"_:\"";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0088.html>;
   :informationResourceResults <test-cases/0088.sparql>;
   :purpose "Test the interpretation of the CURIE \"_:\"";
   :specificationReference "" .
<test-cases/0089> dc:contributor "Manu Sporny";
   dc:title "@src sets a new subject (@typeof)";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0089.html>;
   :informationResourceResults <test-cases/0089.sparql>;
   :purpose "Tests to ensure that @src sets a new subject (focuses on @typeof).";
   :specificationReference "" .
<test-cases/0090> dc:contributor "Manu Sporny";
   dc:title "@src sets a new subject (@rel/@href)";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0090.html>;
   :informationResourceResults <test-cases/0090.sparql>;
   :purpose "Tests to ensure that @src sets a new subject (focuses on @rel/@href).";
   :specificationReference "" .
<test-cases/0091> dc:contributor "Manu Sporny";
   dc:title "Non-reserved, un-prefixed CURIE in @property";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0091.html>;
   :informationResourceResults <test-cases/0091.sparql>;
   :purpose "Tests to ensure that non-reserved, un-prefixed CURIEs, when used in @property, generate triples.";
   :specificationReference "" .
<test-cases/0092> dc:contributor "Ivan Herman";
   dc:title "Tests XMLLiteral content with explicit @datatype";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0092.html>;
   :informationResourceResults <test-cases/0092.sparql>;
   :purpose "Tests the explicit specification of an RDF XMLLiteral with @datatype.";
   :specificationReference "" .
<test-cases/0093> dc:contributor "Ivan Herman";
   dc:title "Tests XMLLiteral content with explicit @datatype (user-data-typed literal)";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0093.html>;
   :informationResourceResults <test-cases/0093.sparql>;
   :purpose "Tests the explicit specification of an RDF XMLLiteral with @datatype using a non-RDF namespace, yielding a user-data-typed literal";
   :specificationReference "" .
<test-cases/0094> dc:contributor "Ivan Herman";
   dc:title "Tests XMLLiteral content with explicit @datatype (unusual prefix - bla:)";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0094.html>;
   :informationResourceResults <test-cases/0094.sparql>;
   :purpose "Tests the explicit specification of an RDF XMLLiteral with @datatype using the proper RDF namespace, but with an unusual prefix - bla:";
   :specificationReference "" .
<test-cases/0099> dc:contributor "Ivan Herman";
   dc:title "Preservation of white space in literals";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0099.html>;
   :informationResourceResults <test-cases/0099.sparql>;
   :purpose "Tests the preservation of white space in literals.";
   :specificationReference "" .
<test-cases/0100> dc:contributor "Ivan Herman";
   dc:title "XMLLiteral with explicit namespace";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0100.html>;
   :informationResourceResults <test-cases/0100.sparql>;
   :purpose "Tests XML elements with explicit namespace. Each of the XML elements in the literal should have at least those namespaces declared that are used in that literal (more is acceptable)";
   :specificationReference "" .
<test-cases/0101> dc:contributor "Ivan Herman";
   dc:title "XMLLiteral with explicit namespace and xml:lang";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0101.html>;
   :informationResourceResults <test-cases/0101.sparql>;
   :purpose "Tests XML elements with explicit namespace. Each of the XML elements in the literal should have at least those namespaces declared that are used in that literal (more is acceptable). Furthermore, the xml:lang should also be set for each of those elements.";
   :specificationReference "" .
<test-cases/0102> dc:contributor "Ivan Herman";
   dc:title "XMLLiteral with explicit namespace and xml:lang; not overwriting existing langs";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0102.html>;
   :informationResourceResults <test-cases/0102.sparql>;
   :purpose """Tests XML elements with explicit namespace. Each of the XML elements in the literal should have at least those namespaces declared that are used in that literal (more is acceptable). Furthermore, the xml:lang should also be set on the first element but existing language 
 declaration should not be changed.""";
   :specificationReference "" .
<test-cases/0103> dc:contributor "Ivan Herman";
   dc:title "XMLLiteral with explicit namespace; not overwriting local namespaces";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0103.html>;
   :informationResourceResults <test-cases/0103.sparql>;
   :purpose "Tests XML elements with explicit namespace. Each of the XML elements in the literal should have at least those namespaces declared that are used in that literal (more is acceptable), but locally set namespaces should not be changed; i.e., the default namespace for the svg element should remain unchanged in the output";
   :specificationReference "" .
<test-cases/0104> dc:contributor "Fabien Gandon";
   dc:title "rdf:value";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0104.html>;
   :informationResourceResults <test-cases/0104.sparql>;
   :purpose "Tests rdf:value with blank nodes to give a value with a unit";
   :specificationReference "" .
<test-cases/0105> dc:contributor "Manu Sporny";
   dc:title "inner @rel neither CURIE nor LinkType";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0105.html>;
   :informationResourceResults <test-cases/0105.sparql>;
   :purpose "Test the behavior of triple generation in a corner case where the inner @rel is neither a CURIE or a LinkType. This test effectively causes a rel=\"\" to be inserted between the outer div subject and the inner @href, which halts chaining.";
   :specificationReference "7.4.3 General Use of Terms in Attributes" .
<test-cases/0106> dc:contributor "Manu Sporny";
   dc:title "chaining with empty value in inner @rel";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0106.html>;
   :informationResourceResults <test-cases/0106.sparql>;
   :purpose "Tests the behavior of triple generation in the case where the inner @rel is defined, but is blank, which halts chaining.";
   :specificationReference "" .
<test-cases/0107> dc:contributor "Manu Sporny";
   dc:title "no garbage collecting bnodes";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0107.html>;
   :informationResourceResults <test-cases/0107.sparql>;
   :purpose "Checks to make sure that that while we shouldn't garbage collect bnodes no triples are generated.";
   :specificationReference "" .
<test-cases/0108> dc:contributor "Manu Sporny";
   dc:title "plain literal with datatype=\"\" and xml:lang preservation";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0108.html>;
   :informationResourceResults <test-cases/0108.sparql>;
   :purpose """Checks to make sure that the RDFa parser emits a plain literal when the datatype is specified as "" and preserves the xml:lang value. The text, with control characters and whitespace preserved, reads "Greek
white   space
".""";
   :specificationReference "" .
<test-cases/0109> dc:contributor "Manu Sporny";
   dc:title "Tests to ensure @xml:base is ignored";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0109.html>;
   :informationResourceResults <test-cases/0109.sparql>;
   :purpose "Tests to make sure that @xml:base is ignored in XHTML+RDFa 1.0. The input test document is invalid XHTML.";
   :specificationReference "" .
<test-cases/0110> dc:contributor "Manu Sporny";
   dc:title "bNode generated even though no nested @about exists";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0110.html>;
   :informationResourceResults <test-cases/0110.sparql>;
   :purpose "Tests to make sure that a bNode is generated even though no nested @about exists.";
   :specificationReference "" .
<test-cases/0111> dc:contributor "Manu Sporny";
   dc:title "two bNodes generated after three levels of nesting";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0111.html>;
   :informationResourceResults <test-cases/0111.sparql>;
   :purpose "Tests to make sure that two bNodes are generated after three levels of nesting and that the last div does not generate a triple.";
   :specificationReference "" .
<test-cases/0112> dc:contributor "Manu Sporny";
   dc:title "plain literal with datatype=\"\"";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0112.html>;
   :informationResourceResults <test-cases/0112.sparql>;
   :purpose "Checks to make sure that the RDFa parser emits a plain literal when the datatype is specified as \"\".";
   :specificationReference "" .
<test-cases/0113> dc:contributor "Manu Sporny";
   dc:title "element with @property and no child nodes generates  empty plain literal";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0113.html>;
   :informationResourceResults <test-cases/0113.sparql>;
   :purpose "Checks to make sure that an element with @property and no child nodes generates empty plain literal.";
   :specificationReference "" .
<test-cases/0114> dc:contributor "Manu Sporny";
   dc:title "Relative URI";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0114.html>;
   :informationResourceResults <test-cases/0114.sparql>;
   :purpose "Checks to make sure that a relative URI is resolved correctly according to RFC3986, section 5 (even when the relative URI is invalid, in this case).";
   :specificationReference "" .
<test-cases/0115> dc:contributor "Ivan Herman",
   "Toby Inkster";
   dc:title "XML Entities must be supported by RDFa parser";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0115.html>;
   :informationResourceResults <test-cases/0115.sparql>;
   :purpose "Checks to make sure that XML Entities are treated properly by the RDFa parser.";
   :specificationReference "" .
<test-cases/0117> dc:contributor "Manu Sporny";
   dc:title "Fragment identifiers stripped from BASE";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0117.html>;
   :informationResourceResults <test-cases/0117.sparql>;
   :purpose "Checks to make sure that fragment identifiers are stripped from [base] when used to generate triples.";
   :specificationReference "" .
<test-cases/0118> dc:contributor "Ben Adida";
   dc:title "empty string \"\" is not equivalent to NULL - @about";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0118.html>;
   :informationResourceResults <test-cases/0118.sparql>;
   :purpose """Checks to make sure that the empty
  string "" isn't considered as NULL in languages such as Javascript when
  generating triples. This test sets the subject in a chain using @href
  and then immediately changes the subject using @about and generates a
  triple. A buggy parser may use the @href subject
  (http://example.org/javascript.html) instead of the one defined by @about.""";
   :specificationReference "" .
<test-cases/0119> dc:contributor "Manu Sporny";
   dc:title "\"[prefix:]\" CURIE format is valid";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0119.html>;
   :informationResourceResults <test-cases/0119.sparql>;
   :purpose """Checks to make sure that an RDFa processor expands CURIEs having only a prefix and a
    colon if a prefix is properly defined using xmlns.
    """;
   :specificationReference "" .
<test-cases/0120> dc:contributor "Manu Sporny";
   dc:title "\"[:]\" CURIE format is valid";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0120.html>;
   :informationResourceResults <test-cases/0120.sparql>;
   :purpose """Checks to make sure that an RDFa processor expands CURIEs having only a colon to the
  default prefix "http://www.w3.org/1999/test-cases/vocab#".
        """;
   :specificationReference "" .
<test-cases/0121> dc:contributor "Manu Sporny";
   dc:title "\"[]\" is a valid safe CURIE";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0121.html>;
   :informationResourceResults <test-cases/0121.sparql>;
   :purpose """Checks to make sure RDFa processors resolve the empty CURIE correctly.
  """;
   :specificationReference "" .
<test-cases/0122> dc:contributor "Manu Sporny";
   dc:title "resource=\"[]\" does not set the object since RDFa does not allow non-prefixed CURIEs";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0122.html>;
   :informationResourceResults <test-cases/0122.sparql>;
   :purpose """Checks to make sure that resource="[]" does not set the object since RDFa does not allow non-prefixed CURIEs.
        """;
   :specificationReference "" .
<test-cases/0124> dc:contributor "Shane P. McCarron";
   dc:title "XMLLiteral with explicit @datatype=''";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0124.html>;
   :informationResourceResults <test-cases/0124.sparql>;
   :purpose "Checks to make sure that XMLLiteral gets processed properly if surrounding element is tagged with @datatype=''.";
   :specificationReference "" .
<test-cases/0126> dc:contributor "Shane P. McCarron";
   dc:title "Multiple @typeof values";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0126.html>;
   :informationResourceResults <test-cases/0126.sparql>;
   :purpose "Checks to ensure that multiple (white space separated) values in @typeof trigger multiple rdf:type triples.";
   :specificationReference "" .
<test-cases/0131> dc:contributor "Philip Taylor";
   dc:title "Whitespace alternatives in attributes";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0131.html>;
   :informationResourceResults <test-cases/0131.sparql>;
   :purpose "Ensures that multiple whitespace alternatives in attributes are allowed.";
   :specificationReference "" .
<test-cases/0134> dc:contributor "Philip Taylor";
   dc:title "Uppercase reserved words";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0134.html>;
   :informationResourceResults <test-cases/0134.sparql>;
   :purpose "Ensures that mixed-case reserved words generate triples.";
   :specificationReference "" .
<test-cases/0140> dc:contributor "Philip Taylor";
   dc:title "Underscore is not allowed in xmlns";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0140.html>;
   :informationResourceResults <test-cases/0140.sparql>;
   :purpose "Ensures that a prefix cannot start with an underscore character when specified using xmlns.";
   :specificationReference "" .
<test-cases/0142> dc:contributor "Philip Taylor";
   dc:title "xmlns prefix 'xml' with correct URI";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0142.html>;
   :informationResourceResults <test-cases/0142.sparql>;
   :purpose "Ensures that RDFa processors allow a prefix named 'xml' with the correct URI.";
   :specificationReference "" .
<test-cases/0147> dc:contributor "Philip Taylor";
   dc:title "xmlns prefix 'xmlzzz' (reserved)";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0147.html>;
   :informationResourceResults <test-cases/0147.sparql>;
   :purpose "Ensures that RDFa processors allow the prefix 'xmlzzz', even though it is a reserved prefix in XML.";
   :specificationReference "" .
<test-cases/0154> dc:contributor "Philip Taylor";
   dc:title "Invalid characters should not generate triples per XML 4th edition rules";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0154.html>;
   :informationResourceResults <test-cases/0154.sparql>;
   :purpose "XHTML+RDFa is based on XHTML M12N and is thus dependent on XML 4th edition rules, which defines certain characters invalid that the 5th edition rules do not. This test ensures that the 4th edition rules are used instead of the 5th edition rules.";
   :specificationReference "" .
<test-cases/0160> dc:contributor "Philip Taylor";
   dc:title "Undeclared prefix 'xml'";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0160.html>;
   :informationResourceResults <test-cases/0160.sparql>;
   :purpose "Ensure that the undeclared prefix 'xml' is not used to generate any triples.";
   :specificationReference "" .
<test-cases/0162> dc:contributor "Philip Taylor";
   dc:title "Undeclared prefix 'xmlns'";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0162.html>;
   :informationResourceResults <test-cases/0162.sparql>;
   :purpose "Ensure that the undeclared prefix 'xmlns' is not used to generate any triples.";
   :specificationReference "" .
<test-cases/0164> dc:contributor "Philip Taylor";
   dc:title "Undeclared common prefixes";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0164.html>;
   :informationResourceResults <test-cases/0164.sparql>;
   :purpose "Ensure that a number of common prefixes, when undeclared, do not generate any unknown triples.";
   :specificationReference "" .
<test-cases/0172> dc:contributor "KANZAKI, Masahide";
   dc:title "@datatype=\"\" generates plain literal in presence of child nodes";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0172.html>;
   :informationResourceResults <test-cases/0172.sparql>;
   :purpose "Checks to ensure that when @datatype=\"\" is used on an element that contains child nodes, that the literal that is generated is a plain literal.";
   :specificationReference "" .
<test-cases/0173> dc:contributor "KANZAKI, Masahide";
   dc:title "@xml:lang=\"\" clears language setting";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0173.html>;
   :informationResourceResults <test-cases/0173.sparql>;
   :purpose "Checks to ensure that when @xml:lang=\"\" is used that any parent element language setting is cleared and a language-less literal is generated.";
   :specificationReference "" .
<test-cases/0174> dc:contributor "I. Stewartson";
   dc:title "Support single character prefix in CURIEs";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0174.html>;
   :informationResourceResults <test-cases/0174.sparql>;
   :purpose "Checks to ensure that the RDFa processor correctly processes single character prefixes when processing CURIEs.";
   :specificationReference "" .
<test-cases/0175> dc:contributor "Gregg Kellogg";
   dc:title "Property is URI";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0175.html>;
   :informationResourceResults <test-cases/0175.sparql>;
   :purpose "Checks to make sure that a URI may be used as a @property value";
   :specificationReference "" .
<test-cases/0176> dc:contributor "Gregg Kellogg";
   dc:title "Rel and Rev is URI";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0176.html>;
   :informationResourceResults <test-cases/0176.sparql>;
   :purpose "Checks to make sure that a URI may be used as @rel and @rev values";
   :specificationReference "" .
<test-cases/0177> dc:contributor "Ivan Herman";
   dc:title "Test @prefix";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0177.html>;
   :informationResourceResults <test-cases/0177.sparql>;
   :purpose "Checks to make sure @prefix with a single entry creates a URI mapping";
   :specificationReference "" .
<test-cases/0178> dc:contributor "Ivan Herman";
   dc:title "Test @prefix with multiple mappings";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0178.html>;
   :informationResourceResults <test-cases/0178.sparql>;
   :purpose "Checks to make sure @prefix with multiple entires creates multiple URI mappings";
   :specificationReference "" .
<test-cases/0179> dc:contributor "Ivan Herman";
   dc:title "Test @prefix vs @xmlns priority";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0179.html>;
   :informationResourceResults <test-cases/0179.sparql>;
   :purpose "Checks to make sure @prefix has a higher priority than @xmlns";
   :specificationReference "" .
<test-cases/0180> dc:contributor "Ivan Herman";
   dc:title "Test @prefix with empty mapping";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0180.html>;
   :informationResourceResults <test-cases/0180.sparql>;
   :purpose "Checks to make sure @prefix with empty prefix does not create a mapping.";
   :specificationReference "" .
<test-cases/0181> dc:contributor "Ivan Herman";
   dc:title "Test default XHTML vocabulary";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0181.html>;
   :informationResourceResults <test-cases/0181.sparql>;
   :purpose "Checks Tests a CURIE with default namespace uses XHTML Vocabulary namespace.";
   :specificationReference "" .
<test-cases/0182> dc:contributor "Ivan Herman";
   dc:title "Test prefix locality";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0182.html>;
   :informationResourceResults <test-cases/0182.sparql>;
   :purpose "Checks to be sure that prefixes are defined within the element hierarchy.";
   :specificationReference "" .
<test-cases/0183> dc:contributor "Ivan Herman";
   dc:title "Test @xmlns redefines @prefix";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0183.html>;
   :informationResourceResults <test-cases/0183.sparql>;
   :purpose "A new @xmlns definition should override a previous @prefix definition at this element.";
   :specificationReference "" .
<test-cases/0184> dc:contributor "Ivan Herman";
   dc:title "Test @profile";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0184.html>;
   :informationResourceResults <test-cases/0184.sparql>;
   :purpose "Check that @profile imports terms";
   :specificationReference "" .
<test-cases/0185> dc:contributor "Ivan Herman";
   dc:title "Test @profile";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0185.html>;
   :informationResourceResults <test-cases/0185.sparql>;
   :purpose "Check that @profile imports prefixes";
   :specificationReference "" .
<test-cases/0186> dc:contributor "Ivan Herman";
   dc:title "Test @vocab";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0186.html>;
   :informationResourceResults <test-cases/0186.sparql>;
   :purpose "Check that @vocab defines a new default mapping";
   :specificationReference "" .
<test-cases/0187> dc:contributor "Ivan Herman";
   dc:title "Test @vocab redefinition";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0187.html>;
   :informationResourceResults <test-cases/0187.sparql>;
   :purpose "Check that @vocab redefines a previous @vocab definition";
   :specificationReference "" .
<test-cases/0188> dc:contributor "Ivan Herman";
   dc:title "Test @vocab";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0188.html>;
   :informationResourceResults <test-cases/0188.sparql>;
   :purpose "Check that @vocab defines a new default mapping";
   :specificationReference "" .
<test-cases/0189> dc:contributor "Ivan Herman";
   dc:title "Test @vocab does not override default term";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0189.html>;
   :informationResourceResults <test-cases/0189.sparql>;
   :purpose "Check that @vocab does not change a default term from XHV";
   :specificationReference "" .
<test-cases/0190> dc:contributor "Ivan Herman";
   dc:title "Test term case insensitivity";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0190.html>;
   :informationResourceResults <test-cases/0190.sparql>;
   :purpose "Check to ensure a mixed case term matches a case insensitive definition";
   :specificationReference "" .
<test-cases/0192> dc:contributor "Gregg Kellogg";
   dc:title "Reserved word used in @property should generate triple (opposite of 0116)";
   a :TestCase;
   :classification :buggy;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0192.html>;
   :informationResourceResults <test-cases/0192.sparql>;
   :purpose "Checks to make sure that reserved words that are used in @property generate triples.";
   :specificationReference "7.4.3 General Use of Terms in Attributes" .
<test-cases/0193> dc:contributor "Gregg Kellogg";
   dc:title "Test @profile defines vocabulary";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0193.html>;
   :informationResourceResults <test-cases/0193.sparql>;
   :purpose "Check that @profile imports prefixes";
   :specificationReference "" .
<test-cases/0194> dc:contributor "Gregg Kellogg";
   dc:title "Test process @profile right to left";
   a :TestCase;
   :classification :rejected;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0194.html>;
   :informationResourceResults <test-cases/0194.sparql>;
   :purpose "Check that profiles are processed from right to left, so that terms defined in left-most profiles take precedence over others";
   :specificationReference "" .
<test-cases/0195> dc:contributor "Gregg Kellogg";
   dc:title "Test process @profile aborts processing";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0195.html>;
   :informationResourceResults <test-cases/0195.sparql>;
   :purpose "If any referenced RDFa Profile is not available, then the current element and its children must not place any triples in the default graph";
   :specificationReference "" .
<test-cases/0196> dc:contributor "Gregg Kellogg";
   dc:title "Test process explicit XMLLiteral";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0196.html>;
   :informationResourceResults <test-cases/0196.sparql>;
   :purpose "XMLLiteral must be explicitly specified, otherwise a normal untyped literal is created";
   :specificationReference "" .
<test-cases/0197> dc:contributor "Gregg Kellogg";
   dc:title "Test TERMorCURIEorAbsURI requires an absolute URI";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0197.html>;
   :informationResourceResults <test-cases/0197.sparql>;
   :purpose "TERMorCURIEorAbsURI requires an absolute URI";
   :specificationReference "" .
<test-cases/0198> dc:contributor "Shane P. McCarron";
   dc:title "datatype XMLLiteral with other embedded RDFa";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0198.html>;
   :informationResourceResults <test-cases/0198.sparql>;
   :purpose "Checks to ensure that when datatype is the default the parser generates triples for embedded content.";
   :specificationReference "" .
<test-cases/0200> dc:contributor "Ivan Herman";
   dc:title "Test term case insensitivity";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0200.html>;
   :informationResourceResults <test-cases/0200.sparql>;
   :purpose "Check to ensure that terms that differ only in case match to distinct URIs";
   :specificationReference "" .
<test-cases/0201> dc:contributor "Manu Sporny";
   dc:title "Expressing an attribute using @property";
   a :TestCase;
   :classification :required;
   :hostLanguage <svgtiny-manifest>;
   :informationResourceInput <test-cases/0201.html>;
   :informationResourceResults <test-cases/0201.sparql>;
   :purpose "Tests @property to establish the predicate; literal object is in the content of the element.";
   :specificationReference "" .
<test-cases/0202> dc:contributor "Gregg Kellogg";
   dc:title "Tests to ensure @xml:base used in SVG";
   a :TestCase;
   :classification :required;
   :hostLanguage <svgtiny-manifest>;
   :informationResourceInput <test-cases/0202.html>;
   :informationResourceResults <test-cases/0202.sparql>;
   :purpose "Tests to make sure that @xml:base is used in SVG+RDFa 1.0.";
   :specificationReference "http://www.w3.org/QA/2008/12/rdfa_and_svg_tiny_and_the_rdfa.html" .
<test-cases/0203> dc:contributor "Gregg Kellogg";
   dc:title "Tests to ensure @xml:base used in non-root elements in SVG";
   a :TestCase;
   :classification :required;
   :hostLanguage <svgtiny-manifest>;
   :informationResourceInput <test-cases/0203.html>;
   :informationResourceResults <test-cases/0203.sparql>;
   :purpose "Tests to make sure that @xml:base is used in non-root elements in SVG+RDFa 1.0.";
   :specificationReference "http://www.w3.org/QA/2008/12/rdfa_and_svg_tiny_and_the_rdfa.html" .
<test-cases/0204> dc:contributor "Gregg Kellogg";
   dc:title "Test process @profile in document order";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0204.html>;
   :informationResourceResults <test-cases/0204.sparql>;
   :purpose "Check that profiles are processed in document order, so that terms defined in later profiles take precedence over those processed earlier";
   :specificationReference "" .
<test-cases/0205> dc:contributor "Gregg Kellogg";
   dc:title "Test that default prefix cannot be redefined";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0205.html>;
   :informationResourceResults <test-cases/0205.sparql>;
   :purpose """
          Check that the default prefix is not redefined through @prefix or through @profile @rdfa:prefix.
          Prefix must be NCName. Default prefix always resolves to http://www.w3.org/1999/xhtml/vocab#.
        """;
   :specificationReference "" .
<test-cases/0206> dc:contributor "Ivan Herman";
   dc:title "Usage of Default Profile";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0206.html>;
   :informationResourceResults <test-cases/0206.sparql>;
   :purpose "Tests whether the default RDFa 1.1 profile (which contains prefix definitions, among others, to the Semantic Web Standard vocabularies) is properly handled.";
   :specificationReference "N.A." .
<test-cases/0207> dc:contributor "Fabien Gandon";
   dc:title "Vevent using @typeof";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0207.html>;
   :informationResourceResults <test-cases/0207.sparql>;
   :purpose "Tests Vevent using @typeof (inlc. dtstart, dtend, etc.)";
   :specificationReference "N.A." .
<test-cases/0208> dc:contributor "Ivan Herman";
   dc:title "Default Profile should be ignored with version set to 1.0";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0208.html>;
   :informationResourceResults <test-cases/0208.sparql>;
   :purpose "Tests whether the default RDFa 1.1 profile is ignored if version is explicitly set to 1.0";
   :specificationReference "N.A." .
<test-cases/0209> dc:contributor "Ivan Herman";
   dc:title "@prefix should be ignored with version set to 1.0";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0209.html>;
   :informationResourceResults <test-cases/0209.sparql>;
   :purpose "Tests whether the @prefix attribute is ignored if version is explicitly set to 1.0";
   :specificationReference "N.A." .
<test-cases/0210> dc:contributor "Ivan Herman";
   dc:title "@prefix should be ignored with version set to 1.0, and @xmlns should prevail";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0210.html>;
   :informationResourceResults <test-cases/0210.sparql>;
   :purpose "Tests whether the @prefix attribute is ignored and @xmlns is used instead if version is explicitly set to 1.0";
   :specificationReference "N.A." .
<test-cases/0211> dc:contributor "Ivan Herman";
   dc:title "@vocab should be ignored with version set to 1.0";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0211.html>;
   :informationResourceResults <test-cases/0211.sparql>;
   :purpose "Tests whether the @vocab attribute is ignored if version is explicitly set to 1.0";
   :specificationReference "N.A." .
<test-cases/0212> dc:contributor "Ivan Herman";
   dc:title "Datatype generation for a literal with XML content, version 1.0";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0212.html>;
   :informationResourceResults <test-cases/0212.sparql>;
   :purpose "In RDFa 1.0, if a literal contains XML elements, and no explicit datatype is set, the result is XMLLiteral";
   :specificationReference "N.A." .
<test-cases/0213> dc:contributor "Ivan Herman";
   dc:title "Datatype generation for a literal with XML content, version 1.1";
   a :TestCase;
   :classification :required;
   :hostLanguage <html4-manifest>,
   <html5-manifest>,
   <xhtml-manifest>;
   :informationResourceInput <test-cases/0213.html>;
   :informationResourceResults <test-cases/0213.sparql>;
   :purpose "In RDFa 1.1, even if a literal contains XML elements, and no explicit datatype is set, the result is plain literal";
   :specificationReference "N.A." .
